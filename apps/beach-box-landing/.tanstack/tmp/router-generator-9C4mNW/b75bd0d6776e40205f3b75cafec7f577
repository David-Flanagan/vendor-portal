/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WhyBeachBoxRouteImport } from './routes/why-beach-box'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as PartnershipModelsRouteImport } from './routes/partnership-models'
import { Route as PartnersRouteImport } from './routes/partners'
import { Route as OnboardMachineRouteImport } from './routes/onboard-machine'
import { Route as LocationsRouteImport } from './routes/locations'
import { Route as FeaturesRouteImport } from './routes/features'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CaseStudiesRouteImport } from './routes/case-studies'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AdminProductsRouteImport } from './routes/admin/products'
import { Route as AdminProductTypesRouteImport } from './routes/admin/product-types'
import { Route as AdminMachinesRouteImport } from './routes/admin/machines'
import { Route as AdminCustomerMachinesRouteImport } from './routes/admin/customer-machines'
import { Route as AdminCategoriesRouteImport } from './routes/admin/categories'
import { Route as AdminBasePricesRouteImport } from './routes/admin/base-prices'
import { Route as DashboardMachineChar91idChar93RouteImport } from './routes/dashboard/machine/[id]'

const WhyBeachBoxRoute = WhyBeachBoxRouteImport.update({
  id: '/why-beach-box',
  path: '/why-beach-box',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const PartnershipModelsRoute = PartnershipModelsRouteImport.update({
  id: '/partnership-models',
  path: '/partnership-models',
  getParentRoute: () => rootRouteImport,
} as any)
const PartnersRoute = PartnersRouteImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardMachineRoute = OnboardMachineRouteImport.update({
  id: '/onboard-machine',
  path: '/onboard-machine',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationsRoute = LocationsRouteImport.update({
  id: '/locations',
  path: '/locations',
  getParentRoute: () => rootRouteImport,
} as any)
const FeaturesRoute = FeaturesRouteImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CaseStudiesRoute = CaseStudiesRouteImport.update({
  id: '/case-studies',
  path: '/case-studies',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminProductsRoute = AdminProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AdminRoute,
} as any)
const AdminProductTypesRoute = AdminProductTypesRouteImport.update({
  id: '/product-types',
  path: '/product-types',
  getParentRoute: () => AdminRoute,
} as any)
const AdminMachinesRoute = AdminMachinesRouteImport.update({
  id: '/machines',
  path: '/machines',
  getParentRoute: () => AdminRoute,
} as any)
const AdminCustomerMachinesRoute = AdminCustomerMachinesRouteImport.update({
  id: '/customer-machines',
  path: '/customer-machines',
  getParentRoute: () => AdminRoute,
} as any)
const AdminCategoriesRoute = AdminCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AdminRoute,
} as any)
const AdminBasePricesRoute = AdminBasePricesRouteImport.update({
  id: '/base-prices',
  path: '/base-prices',
  getParentRoute: () => AdminRoute,
} as any)
const DashboardMachineChar91idChar93Route =
  DashboardMachineChar91idChar93RouteImport.update({
    id: '/machine/[id]',
    path: '/machine/[id]',
    getParentRoute: () => DashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/case-studies': typeof CaseStudiesRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/features': typeof FeaturesRoute
  '/locations': typeof LocationsRoute
  '/onboard-machine': typeof OnboardMachineRoute
  '/partners': typeof PartnersRoute
  '/partnership-models': typeof PartnershipModelsRoute
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/why-beach-box': typeof WhyBeachBoxRoute
  '/admin/base-prices': typeof AdminBasePricesRoute
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/customer-machines': typeof AdminCustomerMachinesRoute
  '/admin/machines': typeof AdminMachinesRoute
  '/admin/product-types': typeof AdminProductTypesRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/machine/[id]': typeof DashboardMachineChar91idChar93Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/case-studies': typeof CaseStudiesRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/features': typeof FeaturesRoute
  '/locations': typeof LocationsRoute
  '/onboard-machine': typeof OnboardMachineRoute
  '/partners': typeof PartnersRoute
  '/partnership-models': typeof PartnershipModelsRoute
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/why-beach-box': typeof WhyBeachBoxRoute
  '/admin/base-prices': typeof AdminBasePricesRoute
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/customer-machines': typeof AdminCustomerMachinesRoute
  '/admin/machines': typeof AdminMachinesRoute
  '/admin/product-types': typeof AdminProductTypesRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin': typeof AdminIndexRoute
  '/dashboard/machine/[id]': typeof DashboardMachineChar91idChar93Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/case-studies': typeof CaseStudiesRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/features': typeof FeaturesRoute
  '/locations': typeof LocationsRoute
  '/onboard-machine': typeof OnboardMachineRoute
  '/partners': typeof PartnersRoute
  '/partnership-models': typeof PartnershipModelsRoute
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/why-beach-box': typeof WhyBeachBoxRoute
  '/admin/base-prices': typeof AdminBasePricesRoute
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/customer-machines': typeof AdminCustomerMachinesRoute
  '/admin/machines': typeof AdminMachinesRoute
  '/admin/product-types': typeof AdminProductTypesRoute
  '/admin/products': typeof AdminProductsRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/machine/[id]': typeof DashboardMachineChar91idChar93Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin'
    | '/case-studies'
    | '/contact'
    | '/dashboard'
    | '/features'
    | '/locations'
    | '/onboard-machine'
    | '/partners'
    | '/partnership-models'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/why-beach-box'
    | '/admin/base-prices'
    | '/admin/categories'
    | '/admin/customer-machines'
    | '/admin/machines'
    | '/admin/product-types'
    | '/admin/products'
    | '/admin/'
    | '/dashboard/machine/[id]'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/case-studies'
    | '/contact'
    | '/dashboard'
    | '/features'
    | '/locations'
    | '/onboard-machine'
    | '/partners'
    | '/partnership-models'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/why-beach-box'
    | '/admin/base-prices'
    | '/admin/categories'
    | '/admin/customer-machines'
    | '/admin/machines'
    | '/admin/product-types'
    | '/admin/products'
    | '/admin'
    | '/dashboard/machine/[id]'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/admin'
    | '/case-studies'
    | '/contact'
    | '/dashboard'
    | '/features'
    | '/locations'
    | '/onboard-machine'
    | '/partners'
    | '/partnership-models'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/why-beach-box'
    | '/admin/base-prices'
    | '/admin/categories'
    | '/admin/customer-machines'
    | '/admin/machines'
    | '/admin/product-types'
    | '/admin/products'
    | '/admin/'
    | '/dashboard/machine/[id]'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AdminRoute: typeof AdminRouteWithChildren
  CaseStudiesRoute: typeof CaseStudiesRoute
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  FeaturesRoute: typeof FeaturesRoute
  LocationsRoute: typeof LocationsRoute
  OnboardMachineRoute: typeof OnboardMachineRoute
  PartnersRoute: typeof PartnersRoute
  PartnershipModelsRoute: typeof PartnershipModelsRoute
  PricingRoute: typeof PricingRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  WhyBeachBoxRoute: typeof WhyBeachBoxRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/why-beach-box': {
      id: '/why-beach-box'
      path: '/why-beach-box'
      fullPath: '/why-beach-box'
      preLoaderRoute: typeof WhyBeachBoxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/partnership-models': {
      id: '/partnership-models'
      path: '/partnership-models'
      fullPath: '/partnership-models'
      preLoaderRoute: typeof PartnershipModelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/partners': {
      id: '/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof PartnersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboard-machine': {
      id: '/onboard-machine'
      path: '/onboard-machine'
      fullPath: '/onboard-machine'
      preLoaderRoute: typeof OnboardMachineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations': {
      id: '/locations'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof LocationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/features': {
      id: '/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/case-studies': {
      id: '/case-studies'
      path: '/case-studies'
      fullPath: '/case-studies'
      preLoaderRoute: typeof CaseStudiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/products': {
      id: '/admin/products'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/product-types': {
      id: '/admin/product-types'
      path: '/product-types'
      fullPath: '/admin/product-types'
      preLoaderRoute: typeof AdminProductTypesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/machines': {
      id: '/admin/machines'
      path: '/machines'
      fullPath: '/admin/machines'
      preLoaderRoute: typeof AdminMachinesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/customer-machines': {
      id: '/admin/customer-machines'
      path: '/customer-machines'
      fullPath: '/admin/customer-machines'
      preLoaderRoute: typeof AdminCustomerMachinesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/categories': {
      id: '/admin/categories'
      path: '/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/base-prices': {
      id: '/admin/base-prices'
      path: '/base-prices'
      fullPath: '/admin/base-prices'
      preLoaderRoute: typeof AdminBasePricesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/dashboard/machine/[id]': {
      id: '/dashboard/machine/[id]'
      path: '/machine/[id]'
      fullPath: '/dashboard/machine/[id]'
      preLoaderRoute: typeof DashboardMachineChar91idChar93RouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface AdminRouteChildren {
  AdminBasePricesRoute: typeof AdminBasePricesRoute
  AdminCategoriesRoute: typeof AdminCategoriesRoute
  AdminCustomerMachinesRoute: typeof AdminCustomerMachinesRoute
  AdminMachinesRoute: typeof AdminMachinesRoute
  AdminProductTypesRoute: typeof AdminProductTypesRoute
  AdminProductsRoute: typeof AdminProductsRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminBasePricesRoute: AdminBasePricesRoute,
  AdminCategoriesRoute: AdminCategoriesRoute,
  AdminCustomerMachinesRoute: AdminCustomerMachinesRoute,
  AdminMachinesRoute: AdminMachinesRoute,
  AdminProductTypesRoute: AdminProductTypesRoute,
  AdminProductsRoute: AdminProductsRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface DashboardRouteChildren {
  DashboardMachineChar91idChar93Route: typeof DashboardMachineChar91idChar93Route
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardMachineChar91idChar93Route: DashboardMachineChar91idChar93Route,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdminRoute: AdminRouteWithChildren,
  CaseStudiesRoute: CaseStudiesRoute,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRouteWithChildren,
  FeaturesRoute: FeaturesRoute,
  LocationsRoute: LocationsRoute,
  OnboardMachineRoute: OnboardMachineRoute,
  PartnersRoute: PartnersRoute,
  PartnershipModelsRoute: PartnershipModelsRoute,
  PricingRoute: PricingRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  WhyBeachBoxRoute: WhyBeachBoxRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
