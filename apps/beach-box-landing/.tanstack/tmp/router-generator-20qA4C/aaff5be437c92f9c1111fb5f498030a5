import { createFileRoute } from '@tanstack/react-router';
import React, { useEffect, useState } from 'react';
import { useAuth } from '../../components/AuthProvider';
import { supabase } from '../../lib/supabaseClient';

const ADMIN_EMAIL = 'flanagandavidfl@gmail.com';

function ProductsAdmin() {
  const { user, loading } = useAuth();
  const [products, setProducts] = useState<any[]>([]);
  const [productTypes, setProductTypes] = useState<any[]>([]);
  const [form, setForm] = useState({
    brand: '',
    product: '',
    product_type: '',
    image_url: '',
  });
  const [submitting, setSubmitting] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchProducts = async () => {
      const { data, error } = await supabase.from('products').select('*').order('created_at', { ascending: false });
      if (!error) setProducts(data || []);
    };
    fetchProducts();
  }, [submitting]);

  useEffect(() => {
    const fetchProductTypes = async () => {
      const { data, error } = await supabase.from('product_types').select('*').order('created_at', { ascending: false });
      if (!error) setProductTypes(data || []);
    };
    fetchProductTypes();
  }, []);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setSubmitting(true);
    setError(null);
    if (!form.brand || !form.product || !form.product_type || !form.image_url) {
      setError('Please fill out all fields.');
      setSubmitting(false);
      return;
    }
    const { error } = await supabase.from('products').insert([
      {
        brand: form.brand,
        product: form.product,
        product_type: form.product_type,
        image_url: form.image_url,
      },
    ]);
    if (error) setError(error.message);
    setForm({ brand: '', product: '', product_type: '', image_url: '' });
    setSubmitting(false);
  };

  if (loading) return <div style={{ textAlign: 'center', marginTop: 80 }}>Loading...</div>;
  if (!user || user.email !== ADMIN_EMAIL) {
    return <div style={{ textAlign: 'center', marginTop: 80, color: '#ef4444' }}>You are not authorized to view this page.</div>;
  }

  return (
    <section id="products">
      <h1 style={{ fontSize: 28, fontWeight: 600, marginBottom: 24 }}>Products</h1>
      <form onSubmit={handleSubmit} style={{ marginBottom: 40, background: '#f9fafb', padding: 24, borderRadius: 12, border: '1px solid #e5e7eb', maxWidth: 500 }}>
        <h3 style={{ fontSize: 20, fontWeight: 600, marginBottom: 16 }}>Add New Product</h3>
        <div style={{ marginBottom: 12 }}>
          <label>Brand</label>
          <input name="brand" value={form.brand} onChange={handleChange} required style={{ width: '100%', padding: 8, borderRadius: 6, border: '1px solid #cbd5e1' }} />
        </div>
        <div style={{ marginBottom: 12 }}>
          <label>Product</label>
          <input name="product" value={form.product} onChange={handleChange} required style={{ width: '100%', padding: 8, borderRadius: 6, border: '1px solid #cbd5e1' }} />
        </div>
        <div style={{ marginBottom: 12 }}>
          <label>Product Type</label>
          <select name="product_type" value={form.product_type} onChange={handleChange} required style={{ width: '100%', padding: 8, borderRadius: 6, border: '1px solid #cbd5e1' }}>
            <option value="">Select product type</option>
            {productTypes.map((pt) => (
              <option key={pt.id} value={pt.name}>{pt.name}</option>
            ))}
          </select>
        </div>
        <div style={{ marginBottom: 12 }}>
          <label>Image URL</label>
          <input name="image_url" value={form.image_url} onChange={handleChange} required placeholder="/products/brand-image.jpg" style={{ width: '100%', padding: 8, borderRadius: 6, border: '1px solid #cbd5e1' }} />
        </div>
        {error && <div style={{ color: '#ef4444', marginBottom: 12 }}>{error}</div>}
        <button type="submit" disabled={submitting} style={{ width: '100%', padding: 12, background: '#2563eb', color: '#fff', border: 'none', borderRadius: 8, fontWeight: 600 }}>
          {submitting ? 'Adding...' : 'Add Product'}
        </button>
      </form>
      <h3 style={{ fontSize: 20, fontWeight: 600, marginBottom: 16 }}>Existing Products</h3>
      {products.map((product) => (
        <div key={product.id} style={{ border: '1px solid #cbd5e1', borderRadius: 12, padding: 20, minWidth: 220, background: '#fff', marginBottom: 16 }}>
          <img src={product.image_url} alt={product.brand} style={{ width: 80, height: 80, objectFit: 'cover', borderRadius: 8, marginBottom: 12 }} />
          <div style={{ fontWeight: 600 }}>{product.brand}</div>
          <div style={{ color: '#64748b', fontSize: 14 }}>{product.product}</div>
          <div style={{ color: '#64748b', fontSize: 14 }}>{product.product_type}</div>
        </div>
      ))}
      {products.length === 0 && <div style={{ color: '#64748b' }}>(No products yet)</div>}
    </section>
  );
}

export const Route = createFileRoute('/admin/products')({
  component: ProductsAdmin,
}); 