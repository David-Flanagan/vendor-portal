version: '3.8'

services:
  # Frontend Application
  broker-portal-ui:
    build:
      context: .
      dockerfile: apps/broker-portal-ui/Dockerfile.dev
    container_name: beach-box-broker-portal-ui
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - ./apps/broker-portal-ui/src:/app/apps/broker-portal-ui/src
      - ./apps/broker-portal-ui/index.html:/app/apps/broker-portal-ui/index.html
      - ./apps/broker-portal-ui/vite.config.ts:/app/apps/broker-portal-ui/vite.config.ts
      - ./apps/broker-portal-ui/tailwind.config.js:/app/apps/broker-portal-ui/tailwind.config.js
      - ./apps/broker-portal-ui/postcss.config.js:/app/apps/broker-portal-ui/postcss.config.js
      # Mount shared packages for hot reload
      - ./packages/unify-ui/src:/app/packages/unify-ui/src
      - ./shared/schemas/src:/app/shared/schemas/src
      # Prevent node_modules from being overwritten
      - /app/node_modules
      - /app/apps/broker-portal-ui/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
    depends_on:
      - api-server
    networks:
      - beach-box-network

  # Backend API Server
  api-server:
    build:
      context: .
      dockerfile: apps/api-server/Dockerfile.dev
    container_name: beach-box-api-server
    ports:
      - "4000:4000"
    volumes:
      # Mount source code for hot reload
      - ./apps/api-server/src:/app/apps/api-server/src
      # Mount shared packages for hot reload
      - ./packages/encompass-api-wrapper/src:/app/packages/encompass-api-wrapper/src
      - ./packages/api-wrapper/src:/app/packages/api-wrapper/src
      - ./shared/schemas/src:/app/shared/schemas/src
      # Prevent node_modules from being overwritten
      - /app/node_modules
      - /app/apps/api-server/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/beach_box_dev
      - MONGODB_URI=mongodb://mongodb:27017/beach_box_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - beach-box-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: beach-box-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=beach_box_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - beach-box-network

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: beach-box-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=beach_box_dev
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - beach-box-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: beach-box-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - beach-box-network

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: beach-box-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - beach-box-network

  # Mongo Express (MongoDB GUI)
  mongo-express:
    image: mongo-express:latest
    container_name: beach-box-mongo-express
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - beach-box-network

  # pgAdmin (PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: beach-box-pgadmin
    ports:
      - "8083:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@beach-box.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - beach-box-network

networks:
  beach-box-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  pgadmin_data: